################################################################################
# Toy Example from Interactive Fixed Effect Models
################################################################################

## Parameters
T0         <- T1 <- 50                                       # length of pre- and post-treatment period
Tt         <- T1+T0                                          # length of total time series
N.Inv      <- N.Val   <- N.Donor <- 8                        # number of W=valid donors and V=invalid donors
rho.lambda <- 0.5                                            # AR coefficient of lantent factor
corr.Y0.W  <- 0.5                                            # corr(error of Y, error of W)
W.coef     <- rbind(8:1/4, rep(c(0.8,0.6,0.4,0.2),each=2))   # factor loadings of valid donors
V.coef     <- rbind(rep(1,8), rep(0.5,8))                    # factor loadings of invalid donors
Y0.coef    <- c(W.coef[,1:N.Donor]%*%rep(1/N.Donor,N.Donor)) # factor loadings of Y
SD         <- 0.1                                            # sd of errors
BT         <- 1+c(0,0,(1:Tt/T0))                             # baseline trend
True.ATT   <- 3                                              # true effect

## Latent factor of W
lambda.eps.series       <- matrix(0,2+Tt,2)
lambda.eps.series[1:2,] <- rnorm(4)*SD
for(time.index in 1:Tt){
  lambda.eps.series[time.index+2,] <-
    rho.lambda*lambda.eps.series[time.index+1,] +
    rho.lambda*lambda.eps.series[time.index,]/2 +
    rnorm(2)*SD
}
lambda.series <- lambda.eps.series + matrix(BT,2+Tt,2)

## Latent factor of V
zeta.eps.series       <- matrix(0,2+Tt,2)
zeta.eps.series[1:2,] <- rnorm(4)*SD
for(time.index in 1:Tt){
  zeta.eps.series[time.index+2,] <-
    rho.lambda*zeta.eps.series[time.index+1,] +
    rho.lambda*zeta.eps.series[time.index,]/2 +
    rnorm(2)*SD
}
zeta.series <- zeta.eps.series + matrix(BT,2+Tt,2)

## Generate Y,W,V
common.eps  <- rnorm(2+Tt)
Y0.idio.eps <- rnorm(2+Tt)
W.idio.eps  <- matrix(rnorm(N.Val*(2+Tt)),2+Tt,N.Val)
V.idio.eps  <- matrix(rnorm(N.Inv*(2+Tt)),2+Tt,N.Inv)
Y0.eps      <- SD*( corr.Y0.W*common.eps + sqrt(1-corr.Y0.W^2)*Y0.idio.eps )
W.eps       <- SD*( corr.Y0.W*matrix(common.eps,2+Tt,N.Val) + sqrt(1-corr.Y0.W^2)*W.idio.eps )
V.eps       <- SD*( V.idio.eps )

Y0.series <- c(lambda.series%*%Y0.coef) + Y0.eps
W.series  <- lambda.series%*%W.coef[,1:N.Val] + W.eps
V.series  <- zeta.series%*%V.coef[,1:N.Inv] + V.eps

## Generate error-prone treatment effect
beta.eps        <- c(rep(0,T0+2),rnorm(T1))
beta            <- c(rep(0,T0+2),rep(True.ATT,T1))
beta.with.noise <- beta + beta.eps*SD

## Post-treatment Y
Y1.series <- Y0.series + beta.with.noise

## Observed Y
Yobs.series                     <- rep(0,T0+T1+2)
Yobs.series[1:(2+T0)]           <- Y0.series[1:(2+T0)]
Yobs.series[(2+T0)+1:T1]        <- Y1.series[(2+T0)+1:T1]

## Pre-treatment series
Dmat.Pre     <- cbind(W.series,V.series)[2+(1:T0),]
Y1.Pre       <- Y0.series[2+(1:T0)]

## Post-treatment series
Dmat.Post    <- cbind(W.series,V.series)[2+T0+(1:T1),]
Y1.Post      <- Y1.series[2+T0+(1:T1)]
True.TT.Vec  <- beta.with.noise[2+T0+1:T1]

## SPSC
SPSC.Detrend <- SPSC(Y.Pre              = Y1.Pre,
                     Y.Post             = Y1.Post,
                     W.Pre              = Dmat.Pre,
                     W.Post             = Dmat.Post,
                     detrend            = TRUE,
                     detrend.ft         = function(t){matrix(c(1,t),1,2)},
                     Y.basis            = function(y){matrix(c(y),1,1)},
                     att.ft             = function(t){matrix(c(1),1,1)},
                     lambda.type        = "cv",
                     lambda.value       = NULL,
                     lambda.grid        = seq(-6,2,by=0.5),
                     bootstrap.num      = 100,
                     conformal.period   = 1:T1,
                     conformal.cover    = TRUE,
                     true.effect        = True.TT.Vec,
                     conformal.interval = TRUE,
                     conformal.pvalue   = 0.05,
                     conformal.window   = 25)

# Average treatment effect and 95\% confidence interval
cbind(SPSC.Detrend$ATT - 1.96*SPSC.Detrend$ASE.ATT,
      SPSC.Detrend$ATT + 1.96*SPSC.Detrend$ASE.ATT)
True.ATT

## Graphical summary
par(mfrow=c(1,2),mar=c(4,4,1,0.5))
plot(1:Tt,SPSC.Detrend$Y,type='l',col=rgb(0,0,0,0.5),xlab="time",ylab="outcome",ylim=c(0,10)) # observed Y
points(1:Tt,SPSC.Detrend$SC,type='l',col=2,lty=2)                                             # SC = synthetic control
segments(1,8,10,8,col=1,lty=1)
text(11,8,"Observed Outcome",col=1,pos=4)
segments(1,6,10,6,col=2,lty=2)
text(11,6,"Synthetic Control",col=2,pos=4)

Eff.Estimate <- (SPSC.Detrend$Y-SPSC.Detrend$SC)[T0+1:T1]                                     # Y - SC over the post-treatment period
POLYGON <- cbind(c(T0+1:T1,T0+T1:1),
                 c(SPSC.Detrend$conformal.interval[1:T1,1],
                   SPSC.Detrend$conformal.interval[T1:1,2]))

plot(T0+1:T1,True.TT.Vec,type='l',col=rgb(0,0,0,0.5),xlab="time",ylab="Effect",ylim=c(2,4))   # True error-prone treatment effect
points(T0+1:T1,Eff.Estimate,type='l',col=2)                                                   # Y - SC
polygon(POLYGON,col=rgb(1,0,0,0.2),border=NA)                                                 # 95\% prediction intervals of error-prone treatment effects

if( length(SPSC.Detrend$conformal.cover==0) ){
  pos <- which(SPSC.Detrend$conformal.cover==0)
  points(T0+pos,True.TT.Vec[pos],pch=19,col=1)                                                # True error-prone treatment effects that lie outside of 95\% prediction intervals
}

segments(T0+1,3.9,T0+6,3.9,col=1,lty=1)
text(T0+6,3.9,"True Effect",col=1,pos=4)
segments(T0+1,3.7,T0+5,3.7,col=2,lty=2)
text(T0+6,3.7,"Effect Estimate",col=2,pos=4)
points(T0+2.5,2.3,col=rgb(1,0,0,0.5),pch=15)
text(T0+6,2.3,"95\% PI",col=2,pos=4)
points(T0+2.5,2.1,pch=19)
text(T0+6,2.1,"Fail to Cover",col=1,pos=4)